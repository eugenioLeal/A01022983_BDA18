CREATE TABLE user (
	id INT NOT NULL,
	name VARCHAR(50) NOT NULL,
	address CLOB(1K) NOT NULL,
	phone_number VARCHAR(20) NOT NULL,
	coverage_type INT NOT NULL,
	policy_price DECIMAL(6,2) NOT NULL,
	coverage_start DATE NOT NULL,
	coverage_end DATE NOT NULL,
	car_brand VARCHAR(50) NOT NULL,
	car_model VARCHAR(50) NOT NULL,
	car_year INT NOT NULL,
	car_value DECIMAL(10,2) NOT NULL,
	car_engine_no BIGINT NOT NULL,
	car_serial_no BIGINT NOT NULL,
	sys_start TIMESTAMP(12) GENERATED ALWAYS AS ROW BEGIN NOT NULL,
  sys_end TIMESTAMP(12) GENERATED ALWAYS AS ROW END NOT NULL,
  trans_start TIMESTAMP(12) GENERATED ALWAYS AS TRANSACTION START ID,
  PERIOD SYSTEM_TIME (sys_start, sys_end),
	PERIOD BUSINESS_TIME (coverage_start, coverage_end),
	PRIMARY KEY(id, BUSINESS_TIME WITHOUT OVERLAPS)
)

CREATE TABLE user_history LIKE user

ALTER TABLE user ADD VERSIONING USE HISTORY TABLE user_history

CREATE TRIGGER update_price
NO CASCADE BEFORE UPDATE
ON user
REFERENCING OLD AS old_values
NEW AS new_values
FOR EACH ROW MODE DB2SQL
WHEN (new_values.coverage_end != old_values.coverage_end)
BEGIN ATOMIC
  SET new_values.policy_price = old_values.policy_price * (DAYS(new_values.coverage_end) - DAYS(new_values.coverage_start)) / (DAYS(old_values.coverage_end) - DAYS(old_values.coverage_start));
END

CREATE TRIGGER delete_update_price
AFTER DELETE
ON user
REFERENCING OLD AS old_values
FOR EACH ROW MODE DB2SQL
BEGIN ATOMIC
  UPDATE user SET policy_price = old_values.policy_price * (DAYS(coverage_end) - DAYS(coverage_start)) / (DAYS(old_values.coverage_end) - DAYS(old_values.coverage_start)) WHERE id = old_values.id;
END

CREATE TRIGGER update_coverage
NO CASCADE BEFORE UPDATE
ON user
REFERENCING OLD AS old_values
NEW AS new_values
FOR EACH ROW MODE DB2SQL
WHEN (new_values.coverage_type > old_values.coverage_type)
BEGIN ATOMIC
  SIGNAL SQLSTATE '56001';
END

INSERT INTO user (
  id,
  name,
  address,
  phone_number,
  coverage_type,
  policy_price,
  coverage_start,
  coverage_end,
  car_brand,
  car_model,
  car_year,
  car_value,
  car_engine_no,
  car_serial_no
) VALUES (
  1,
  'Alfonso Vargas',
  'Av. de los Poetas 100',
  '+525555555555',
  4,
  300,
  '2017-12-12',
  '2018-12-12',
  'Volvo',
  'S90',
  2018,
  500000,
  348756348956734,
  74386573259784569
)

UPDATE user SET coverage_type = 2 WHERE id = 1

UPDATE user SET coverage_type = 4 WHERE id = 1

DELETE FROM user FOR PORTION OF BUSINESS_TIME FROM '2018-06-12' TO '2018-12-12' WHERE id = 1
